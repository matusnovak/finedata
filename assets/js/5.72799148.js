(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{219:function(t,a,n){"use strict";n.r(a);var s=n(0),e=Object(s.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("table",[t._m(1),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("master")]),t._v(" "),n("td",[n("a",{attrs:{href:"https://circleci.com/gh/matusnovak/finedata/tree/master",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://circleci.com/gh/matusnovak/finedata/tree/master.svg?style=svg",alt:"CircleCI"}}),n("OutboundLink")],1)]),t._v(" "),n("td",[n("a",{attrs:{href:"https://travis-ci.org/matusnovak/finedata",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://travis-ci.org/matusnovak/finedata.svg?branch=master",alt:"Build Status"}}),n("OutboundLink")],1)]),t._v(" "),n("td",[n("a",{attrs:{href:"https://ci.appveyor.com/project/matusnovak/finedata/branch/devel",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://ci.appveyor.com/api/projects/status/7ptts9y3grin6jqs/branch/master?svg=true",alt:"Build status"}}),n("OutboundLink")],1)])]),t._v(" "),n("tr",[n("td",[t._v("devel")]),t._v(" "),n("td",[n("a",{attrs:{href:"https://circleci.com/gh/matusnovak/finedata/tree/devel",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://circleci.com/gh/matusnovak/finedata/tree/devel.svg?style=svg",alt:"CircleCI"}}),n("OutboundLink")],1)]),t._v(" "),n("td",[n("a",{attrs:{href:"https://travis-ci.org/matusnovak/finedata",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://travis-ci.org/matusnovak/finedata.svg?branch=devel",alt:"Build Status"}}),n("OutboundLink")],1)]),t._v(" "),n("td",[n("a",{attrs:{href:"https://ci.appveyor.com/project/matusnovak/finedata/branch/devel",target:"_blank",rel:"noopener noreferrer"}},[n("img",{attrs:{src:"https://ci.appveyor.com/api/projects/status/7ptts9y3grin6jqs/branch/devel?svg=true",alt:"Build status"}}),n("OutboundLink")],1)])])])]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),n("p",[t._v("The FineData is a standalone library that provides the basic API wrappers around reading and writing JSON, YAML, and XML files using a universal API. Meaning, the same piece of code that you can use to load a JSON file can be used to load a YAML file. The library provides a unified ffw::DataReader and ffw::DataWriter classes that can give you an ffw::DataIterator. This iterator can be used to go through the data structure of YAML, JSON, and XML file. The iterator can also perform checks on the current node, such as isString(), isFloat(), isNumber(), isArray(), etc. The library also offers a ffw::Node data structure. This is very similar to how JavaScript variables behave. This ffw::Node can be any of the following types: string, bool, int64, double, nullptr, array, and a map/object. You can the ffw::DataReader to convert the given node, or an entire structure, into the ffw::Node. This same ffw::Node can be used for all (JSON, YAML, and XML) data types. Sure, this is not the perfect design, but allows you to read any of the tree data types (or write to) and not worry about handling three different spaghetti code to handle all types. Just one simple unified interface.")]),t._v(" "),n("p",[t._v("Please keep in mind, that the reading and writing XML through ffw::Node is not 100% compatible with the entire XML standard. Due to the reasons that there is not an easy way to spot an array of items in XML, or everything is a string! This library tries to do the best, but I guarantee you there will be some weird behavior. Anyway, you should not use XML in 2018! JSON and YAML are better.")]),t._v(" "),t._m(4),t._v(" "),n("p",[n("strong",[t._v("API Documentation is provided at "),n("a",{attrs:{href:"http://matusnovak.github.io/finedata/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://matusnovak.github.io/finedata/"),n("OutboundLink")],1)])]),t._v(" "),t._m(5),t._v(" "),n("p",[t._v("All dependencies listed here are already included as a git submodule and will be statically linked to the fineframework library. Therefore, no need to compile them manually, nor link them manually! Everything is automated via CMake.")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://www.freetype.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("freetype2"),n("OutboundLink")],1),t._v(" - Used by NanoVG for font loading")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.glfw.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("glfw"),n("OutboundLink")],1),t._v(" - Used as a primary backend (ffw::GLRenderWindow) for creating GL context and handling user input")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/glennrp/libpng",target:"_blank",rel:"noopener noreferrer"}},[t._v("libpng"),n("OutboundLink")],1),t._v(" - Needed by FreeType2")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/memononen/nanovg",target:"_blank",rel:"noopener noreferrer"}},[t._v("nanovg"),n("OutboundLink")],1),t._v(" - Used as a 2D canvas rendering backend")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/syoyo/tinyobjloader.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("tinyobjloader"),n("OutboundLink")],1),t._v(" - Only used in examples")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/madler/zlib",target:"_blank",rel:"noopener noreferrer"}},[t._v("zlib"),n("OutboundLink")],1),t._v(" - Needed by FreeType2")]),t._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/enthought/bzip2-1.0.6",target:"_blank",rel:"noopener noreferrer"}},[t._v("bzip2"),n("OutboundLink")],1),t._v(" - Needed by FreeType2")])]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),n("p",[t._v("Create a rendering window and draw a rectangle:")]),t._v(" "),t._m(9),n("p",[t._v("An alternative approach with shorter quick and dirty API:")]),t._v(" "),t._m(10),t._m(11),t._v(" "),n("p",[t._v("One of the following compilers:")]),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),n("p",[t._v("You can "),n("a",{attrs:{href:"https://github.com/matusnovak/finedata/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("use one of the automatically built releases from GitHub Releases"),n("OutboundLink")],1),t._v(" or compile it manually by following the "),n("router-link",{attrs:{to:"./INSTALL.html"}},[t._v("Install Guide")]),t._v(" (Don't worry, it's easy).")],1),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),n("p",[t._v("Documentation can be found at "),n("a",{attrs:{href:"http://matusnovak.github.io/finedata/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://matusnovak.github.io/finedata/"),n("OutboundLink")],1)]),t._v(" "),t._m(21),t._v(" "),n("p",[t._v("All examples are located in the "),n("router-link",{attrs:{to:"./examples/"}},[t._v("examples folder")]),t._v(".")],1),t._v(" "),t._m(22),t._v(" "),n("p",[t._v("Looking for alternative library or framework? Try OpenFrameworks, SFML, or Cinder (be warned, they are much more bigger, but feature rich).")]),t._v(" "),t._m(23),t._v(" "),n("p",[t._v("Feel free to post a question in GitHub issues. Pull requests are welcome!")]),t._v(" "),t._m(24),t._v(" "),n("p",[t._v("Feel free to contact me on my email (see my GitHub profile).")]),t._v(" "),t._m(25),t._v(" "),n("p",[n("a",{attrs:{href:"https://en.wikipedia.org/wiki/MIT_License",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://en.wikipedia.org/wiki/MIT_License"),n("OutboundLink")],1)]),t._v(" "),t._m(26)])},[function(){var t=this.$createElement,a=this._self._c||t;return a("h1",{attrs:{id:"finedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#finedata","aria-hidden":"true"}},[this._v("#")]),this._v(" FineData")])},function(){var t=this.$createElement,a=this._self._c||t;return a("thead",[a("tr",[a("th"),this._v(" "),a("th",[this._v("CircleCI")]),this._v(" "),a("th",[this._v("TravisCI")]),this._v(" "),a("th",[this._v("AppVeyor")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[a("em",[this._v("The following compilers are tested in the CI above: Visual Studio 2013, Visual Studio 2013 Win64, Visual Studio 2015, Visual Studio 2015 Win64, Visual Studio 2017, Visual Studio 2017 Win64, MinGW-w64 i686, MinGW-w64 x86_64, Linux GCC 5.5.0, Linux GCC 6.4.0, Linux GCC 5.5.0, Linux GCC 7.3.0, and OSX Clang 3.7")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[this._v("#")]),this._v(" Introduction")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("This library also bundles all third party libraries statically. Meaning, you only have to link the "),a("code",[this._v(".lib")]),this._v("  file (or "),a("code",[this._v(".so")]),this._v(" on Linux). No need to manually download the libraries (GLFW, FreeType2, etc.), and spend an entire weekend figuring out how to plug it all together, and going through outdated or complicated instructions for some libraries. You either download the pre-built FineData from the GitHub releases, or build it manually (which is super easy), and you are good to go!")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"dependencies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dependencies","aria-hidden":"true"}},[this._v("#")]),this._v(" Dependencies")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#todo","aria-hidden":"true"}},[this._v("#")]),this._v(" TODO")])},function(){var t=this.$createElement,a=this._self._c||t;return a("ul",[a("li",[this._v("More examples, documentation, and tutorials")]),this._v(" "),a("li",[this._v("More unit tests")]),this._v(" "),a("li",[this._v("Vulkan (maybe)")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"quick-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quick-example","aria-hidden":"true"}},[this._v("#")]),this._v(" Quick example")])},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{attrs:{class:"token macro property"}},[t._v("#"),n("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("<ffw/data.h>")])]),t._v("\n"),n("span",{attrs:{class:"token macro property"}},[t._v("#"),n("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ffw"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("JsonReader "),n("span",{attrs:{class:"token function"}},[t._v("json")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"{"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"string\\": \\"Hello World!\\","')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"integer\\": -123,"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"float\\": 0.123,"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"null\\": null,"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"object\\": {\\"first\\": 10, \\"second\\": 20},"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"array\\": [10, 20],"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"boolean\\": true"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"}"')]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// throws on error")]),t._v("\n\n        ffw"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("JsonIterator node"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Get the root object")]),t._v("\n        json"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getNext")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("node"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// Get the root object")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Returns true because the root is an object/map")]),t._v("\n        node"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("isObject")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Steps into the last json.getNext()")]),t._v("\n        json"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("stepInto")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Gets the first item from the object")]),t._v("\n        json"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getNext")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("node"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v('// Returns "string"')]),t._v("\n        node"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getKey")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v('// Returns "Hello World!"')]),t._v("\n        node"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("toString")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("/* after going through all items in the object */")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Returns false because there is no other item in the object!")]),t._v("\n        json"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getNext")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v("node"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Steps out into the root. We are done now!")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// If there was an object within an object (or array within an array)")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// you can use this function to step out into the parent.")]),t._v("\n        json"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("stepOut")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ffw"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("JsonReaderException"),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v(" e"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        std"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("cerr "),n("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" e"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("what")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{attrs:{class:"token macro property"}},[t._v("#"),n("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("<ffw/data.h>")])]),t._v("\n"),n("span",{attrs:{class:"token macro property"}},[t._v("#"),n("span",{attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n\n"),n("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("main")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v("argv"),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        ffw"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("Node json "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" ffw"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),n("span",{attrs:{class:"token function"}},[t._v("decodeJson")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"{"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"string\\": \\"Hello World!\\","')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"integer\\": -123,"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"float\\": 0.123,"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"null\\": null,"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"object\\": {\\"first\\": 10, \\"second\\": 20},"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"array\\": [10, 20],"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"    \\"boolean\\": true"')]),t._v("\n            "),n("span",{attrs:{class:"token string"}},[t._v('"}"')]),t._v("\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{attrs:{class:"token comment"}},[t._v("// throws on error")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v('// "json" now contains the root object (and all children)')]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Returns true because the root is not an array")]),t._v("\n        json"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("isObject")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Cast to object (no actual conversion is done)")]),t._v("\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// ffw::Node::Object is actually std::unordered_map<std::string, ffw::Node>")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ffw"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("Node"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("Object"),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v(" root "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" json"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getAsObject")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Returns 7")]),t._v("\n        root"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("size")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v('// Returns the "integer" item')]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ffw"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("Node"),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v(" item "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" root"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("at")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"integer"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Returns true")]),t._v("\n        item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("isInteger")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{attrs:{class:"token comment"}},[t._v("// Get the real value")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("uint64_t")]),t._v(" i "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("getAsInt")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ffw"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("JsonReaderException"),n("span",{attrs:{class:"token operator"}},[t._v("&")]),t._v(" e"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        std"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("cerr "),n("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" e"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("what")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),n("span",{attrs:{class:"token operator"}},[t._v("::")]),t._v("endl"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements","aria-hidden":"true"}},[this._v("#")]),this._v(" Requirements")])},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ul",[n("li",[t._v("(Windows) Visual Studio 2013 32-bit or 64-bit")]),t._v(" "),n("li",[t._v("(Windows) Visual Studio 2015 32-bit or 64-bit")]),t._v(" "),n("li",[t._v("(Windows) Visual Studio 2017 32-bit or 64-bit")]),t._v(" "),n("li",[t._v("(Windows) MinGW-w64 i686")]),t._v(" "),n("li",[t._v("(Windows) MinGW-w64 x86_64")]),t._v(" "),n("li",[t._v("(Linux) GCC 4.9 or newer")]),t._v(" "),n("li",[t._v("(OSX) Clang 3.7 or newer")])])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"compiling-finedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compiling-finedata","aria-hidden":"true"}},[this._v("#")]),this._v(" Compiling FineData")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"using-finedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-finedata","aria-hidden":"true"}},[this._v("#")]),this._v(" Using FineData")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"windows"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows","aria-hidden":"true"}},[this._v("#")]),this._v(" Windows")])},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("p",[t._v("First, compile the library (see section above), next to use the finedata in your project, simply include the "),n("code",[t._v("C:/path/to/finedata/include")]),t._v(" and link the "),n("code",[t._v("finedata.lib")]),t._v(". You will also need the "),n("code",[t._v("finedata.dll")]),t._v(" in order to run the application. Simply copy the DLL into the executable folder. You can find the "),n("code",[t._v(".lib")]),t._v(" and "),n("code",[t._v(".dll")]),t._v(" files in the cmake build folder.")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h3",{attrs:{id:"linux-osx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-osx","aria-hidden":"true"}},[this._v("#")]),this._v(" Linux/OSX")])},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("p",[t._v("First, compile the library (see section above), next to use the finedata in your project, simply include the "),n("code",[t._v("~/finedata/include")]),t._v(" (or "),n("code",[t._v("/usr/local/include")]),t._v(" if you have installed it) and link the "),n("code",[t._v("finedata.so")]),t._v(". You can find the "),n("code",[t._v(".so")]),t._v(" files in the cmake build folder (or at the installed path provided by CMAKE_INSTALL_PREFIX).")])},function(){var t=this.$createElement,a=this._self._c||t;return a("p",[this._v("If you are planning to distribute your application with FineData, you will need to copy the "),a("code",[this._v("finedata.so")]),this._v(" and include it within your application. For example, the most simple way, copy it into the executable folder (same as in Windows).")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"documentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#documentation","aria-hidden":"true"}},[this._v("#")]),this._v(" Documentation")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[this._v("#")]),this._v(" Examples")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"alternatives"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alternatives","aria-hidden":"true"}},[this._v("#")]),this._v(" Alternatives")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"contributing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contributing","aria-hidden":"true"}},[this._v("#")]),this._v(" Contributing")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"contact"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contact","aria-hidden":"true"}},[this._v("#")]),this._v(" Contact")])},function(){var t=this.$createElement,a=this._self._c||t;return a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[this._v("#")]),this._v(" License")])},function(){var t=this.$createElement,a=this._self._c||t;return a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v('The MIT License (MIT)\n\nCopyright (c) 2018 Matus Novak\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the "Software"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n')])])])}],!1,null,null,null);e.options.__file="README.md";a.default=e.exports}}]);